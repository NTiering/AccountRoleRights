@model IEnumerable<App.Contracts.DataModels.IAccountDataModel>
@{
    Layout = null;
	var toolButtons = ViewBag.ToolButtons == null ? String.Empty : ViewBag.ToolButtons.ToLower().Trim();
    var viewToolButton = toolButtons.Contains("v");
    var editToolButton = toolButtons.Contains("e");
    var deleteToolButton = toolButtons.Contains("d");
    var pickToolButton = toolButtons.Contains("p");

	var pickState = ViewBag.PickState == null ? 0 : ViewBag.PickState ? 1:0;
}
<script>
    $(function () {
        radio("app-startup").broadcast(false);
    })
</script>
<table class="table table-hover dataTable" id="dataTable-Account">
    <thead>
		<tr>
			<td title="Identifier" class="header datatype-Id">
				Id
			</td>
			<td title="Unique user Id" class="header datatype-string">
				Username
			</td>
			<td title="Last time someone successfully logged in with this account" class="header datatype-datetime">
				Last Logged In
			</td>
			<td title="Count of unsuccessful login attempts against this account" class="header datatype-int">
				Login Attempts
			</td>
			<td title="If true this account cannot be used until unlocked" class="header datatype-bool">
				Is Locked Out
			</td>
			<td title="The date the account can be used from" class="header datatype-datetime">
				Account Valid From
			</td>
			<td title="The date the account can be used to" class="header datatype-datetime">
				Account Valid To
			</td>
			<td></td>               
		</tr>
		
	</thead>

    <tbody>
        @foreach (var m in Model.Where(x=> x != null)){<text>
        <tr>
			<td title="Identifier" class="row datatype-Id">
				@m.Id
			</td>
			<td title="Unique user Id" class="row datatype-string">
				@m.Username
			</td>
			<td title="Last time someone successfully logged in with this account" class="row datatype-datetime">
				@m.LastLoggedIn.ToLongDateString()
			</td>			<td title="Count of unsuccessful login attempts against this account" class="row datatype-int">
				@m.LoginAttempts
			</td>
			<td title="If true this account cannot be used until unlocked" class="row datatype-bool">
				@m.IsLockedOut
			</td>
			<td title="The date the account can be used from" class="row datatype-datetime">
				@m.AccountValidFrom.ToLongDateString()
			</td>			<td title="The date the account can be used to" class="row datatype-datetime">
				@m.AccountValidTo.ToLongDateString()
			</td>		 <td class="row datatype-actions">
            <div class="btn-group btn-group-sm">
				@if (viewToolButton)
				{<i title="View" class="icon-search btn btn-default" aria-hidden="true" onclick="radio('app-account-view').broadcast(@m.Id)"></i>}
				@if (editToolButton)
				{<i title="Edit" class="icon-edit btn btn-default" aria-hidden="true" onclick="radio('app-account-edit').broadcast(@m.Id)"></i>}
				@if (deleteToolButton)
				{<i title="Delete" class="icon-delete btn btn-danger" aria-hidden="true" onclick="radio('app-account-delete').broadcast(@m.Id)"></i>}
				@if (pickToolButton)
				{<i title="Pick" class="fa fa-times btn btn-danger pick-btn" data-pickable="1" data-pick-elementId="@m.Id" data-pick-value="@pickState" aria-hidden="true" ></i>}
			</div>
		</td>
		</tr></text>}
    </tbody>
</table>